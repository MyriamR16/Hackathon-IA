#!/usr/bin/env python3
import os
import sys
import csv
import secrets
import string
from datetime import datetime

# Ajouter le r√©pertoire backend au path pour importer l'app
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import create_app, db
from app.models import Pompier

# Cr√©er l'application Flask
app = create_app()

def generate_secure_password(length=12):
    """G√©n√®re un mot de passe s√©curis√©"""
    alphabet = string.ascii_letters + string.digits + "!@#$%^&*"
    password = ''.join(secrets.choice(alphabet) for i in range(length))
    return password

def clean_database():
    """Supprime tous les pompiers existants sauf l'admin"""
    with app.app_context():
        # Supprimer tous les utilisateurs qui ne sont pas admin
        non_admin_users = Pompier.query.filter(Pompier.role != 'admin').all()
        for user in non_admin_users:
            db.session.delete(user)
        db.session.commit()
        print(f"Supprim√© {len(non_admin_users)} pompiers non-admin")

def import_pompiers_from_csv():
    """Importe les pompiers depuis le CSV avec des noms plus r√©alistes"""
    
    # Noms fran√ßais r√©alistes pour les pompiers
    noms_pompiers = [
        "Alain Dubois", "Bernard Martin", "Catherine Durand", "Daniel Moreau", "√âmilie Leroy",
        "Fran√ßois Roux", "G√©raldine Simon", "Henri Michel", "Isabelle Petit", "Jacques Laurent",
        "Karine Bernard", "Louis Rousseau", "Marie Lefebvre", "Nicolas Mercier", "Odette Garnier",
        "Pierre Fabre", "Quentin Morel", "Rachel Vincent", "St√©phane Fournier", "Th√©r√®se Girard",
        "Ursula Bonnet", "Victor Lambert", "Wendy Fontaine", "Xavier Roussel", "Yann Lefevre",
        "Zo√© Martinez", "Antoine Blanc", "Brigitte Lemoine", "Claude Fernandez", "Delphine Roy",
        "√âric Muller", "Fabrice Leclerc", "Gabrielle Andr√©", "Hugo Masson", "In√®s Sanchez",
        "Julien Robin", "K√©vin Guerin", "La√´titia Clement", "Marc Dubois", "Nathalie Morin",
        "Olivier Thomas", "Pascale Giraud", "Quentin Perrin", "Rapha√´l David", "Sandrine Roche",
        "Thibault Brun", "Val√©rie Caron", "William Garcia", "Yasmina Lopez", "Zacharie Martin",
        "Am√©lie Dufour", "Benjamin Legrand", "C√©line Rivi√®re", "Dimitri Marchand", "Estelle Colin",
        "Florian Lemaire", "Gis√®le Picard", "Hadrien Boyer", "Ir√®ne Moulin", "Jean-Paul Noel",
        "Kristel Weber", "Lionel Barbier", "M√©lanie Chevalier", "Norbert Denis", "Oph√©lie Meyer",
        "Philippe Meunier", "Quitterie Aubry", "R√©my Lecomte", "Sabrina Prevost", "Tanguy Leroux",
        "Ursule Guillot", "Vincent Huet", "Wanda Berger", "Yolande Carpentier", "Z√©phyr Mallet",
    ]
    
    csv_file_path = '/home/Myriam/Documents/Hackathon-IA/disponibilites_2026.csv'
    
    with app.app_context():
        try:
            with open(csv_file_path, 'r', encoding='utf-8-sig') as file:
                reader = csv.DictReader(file)
                
                imported_count = 0
                
                for row_index, row in enumerate(reader):
                    if imported_count >= len(noms_pompiers):
                        break
                    
                    nom_complet = noms_pompiers[imported_count].split()
                    prenom = nom_complet[0]
                    nom = nom_complet[1] if len(nom_complet) > 1 else "Pompier"
                    
                    # Cr√©er un email bas√© sur le nom et pr√©nom
                    email = f"{prenom.lower()}.{nom.lower()}@pompiers-pibrac.fr"
                    
                    # V√©rifier si le pompier existe d√©j√†
                    existing_pompier = Pompier.query.filter_by(email=email).first()
                    if existing_pompier:
                        print(f"Pompier {email} existe d√©j√†, on passe")
                        continue
                    
                    # G√©n√©rer un mot de passe s√©curis√©
                    password = generate_secure_password()
                    
                    # Cr√©er le nouveau pompier
                    nouveau_pompier = Pompier(
                        nom=nom,
                        prenom=prenom,
                        grade='Pompier 2√®me classe',  # Grade par d√©faut
                        email=email,
                        role='pompier',
                        type_pompier='volontaire'
                    )
                    
                    # D√©finir le mot de passe (sera hash√© automatiquement)
                    nouveau_pompier.set_password(password)
                    
                    db.session.add(nouveau_pompier)
                    imported_count += 1
                    
                    if imported_count % 50 == 0:
                        print(f"Import√© {imported_count} pompiers...")
                
                db.session.commit()
                print(f"\n‚úÖ Import termin√© !")
                print(f"Total des pompiers import√©s : {imported_count}")
                
                # V√©rification
                total_users = Pompier.query.count()
                print(f"Nombre total d'utilisateurs dans la base : {total_users}")
                
        except Exception as e:
            db.session.rollback()
            print(f"‚ùå Erreur lors de l'import : {e}")

if __name__ == '__main__':
    print("üßπ Nettoyage de la base de donn√©es...")
    clean_database()
    
    print("üì• Import des pompiers avec des noms r√©alistes...")
    import_pompiers_from_csv()
